buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
        classpath 'com.github.dcendents:android-maven-plugin:1.2'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'

group = 'com.github.yoojia'
version = '0.3'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 13
        targetSdkVersion 21
        versionCode 1
        versionName version
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

def siteUrl = 'https://github.com/yoojia/ZXingMini'
def gitUrl = 'https://github.com/yoojia/ZXingMini.git'

bintray {
    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'android'
        name = 'ZXingMini'
        desc = 'An easy to use library for ZXing QRCode support library'
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/yoojia/ZXingMini/issues'
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
